# pylint: disable=unused-argument,invalid-name

from typing import Hashable

class Elo:
    def __init__(self, k: int, g: int = 1, home_field: int = 100) -> None: ...
    def add_player(self, name: Hashable, rating: float = 1500) -> None: ...
    def game_over(
        self, winner: Hashable, loser: Hashable, winner_home: bool
    ) -> None: ...
    def expect_result(self, p1: float, p2: float) -> float: ...
    @property
    def rating(self) -> dict[Hashable, float]: ...

    # Backward compatibility
    def addPlayer(self, name: Hashable, rating: float = 1500) -> None: ...
    def gameOver(self, winner: Hashable, loser: Hashable, winnerHome: bool) -> None: ...
    def expectResult(self, p1: float, p2: float) -> float: ...
    @property
    def ratingDict(self) -> dict[Hashable, float]: ...
